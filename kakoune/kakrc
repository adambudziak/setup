source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "andreyorst/fzf.kak" defer fzf %{
    set-option global fzf_highlight_command 'bat'
    set-option global fzf_file_command 'rg'
}
plug 'alexherbo2/auto-pairs.kak'
plug 'evanrelf/kakoune-number-toggle'
plug "andreyorst/powerline.kak" defer "powerline" %{
    powerline-separator triangle
    set-option global powerline_format 'powerline-format git bufname filetype mode_info line_column position'
    powerline-toggle line_column off
    powerline-theme gruvbox
}
plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path . # `--path .' is needed by recent versions of cargo
} config %{
    set-option global lsp_diagnostic_line_error_sign '║'
    set-option global lsp_diagnostic_line_warning_sign '┊'
    set-option global lsp_server_configuration pyls.configurationSources=["flake8"]

    define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
    define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
    define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }

    define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }

    hook global WinSetOption filetype=(c|cpp|rust|python) %{
        set-option window lsp_auto_highlight_references true
        set-option window lsp_hover_anchor false
        lsp-auto-hover-enable
        lsp-enable-window
    }

    hook global WinSetOption filetype=(rust) %{
        set-option window lsp_server_configuration rust.clippy_preference="on"
    }

    hook global WinSetOption filetype=rust %{
        hook window BufWritePre .* %{
            evaluate-commands %sh{
                test -f rustfmt.toml && printf lsp-formatting-sync
            }
        }
    }

    hook global KakEnd .* lsp-exit
}
plug "andreyorst/smarttab.kak" defer smarttab %{
} config %{
    hook global WinSetOption filetype=(rust|python|yaml) expandtab
}


colorscheme dracula
add-highlighter global/ show-whitespaces

map global normal <c-p> ': fzf-mode<ret>'

# enable auto-pairs on every new window
hook global WinCreate .* %{
      auto-pairs-enable
}
map global user s -docstring 'Surround' ': auto-pairs-surround <lt> <gt><ret>'
map global user S -docstring 'Surround++' ': auto-pairs-surround <lt> <gt> _ _ * *<ret>'
hook global WinSetOption filetype=rust %{
    auto-pairs-disable
    set-option buffer auto_pairs_surround { } ( ) [ ] '"' '"'
    set-option buffer auto_pairs { } ( ) [ ] '"' '"'
    set-option buffer tabstop 4
}

hook global WinSetOption filetype=python %{
    set-option buffer tabstop 4
}

hook global WinSetOption filetype=yaml %{
    set-option buffer tabstop 2
}

hook global ModeChange insert:.* %{
        set-face global PrimaryCursor      rgb:ffffff,rgb:880000+F
}

hook global ModeChange .*:insert %{
        set-face global PrimaryCursor      rgb:ffffff,rgb:008800+F
}

hook global WinSetOption filetype=json %{
    set-option buffer formatcmd "python -m json.tool"
}

# simple integration with system buffer
# y	copy to internal and system buffer
# p	paste from internal buffer
# ,p	paste before from system buffer
# ,P	paste after from system buffer
hook global NormalKey y|d|c %{ nop %sh{
      printf %s "$kak_main_reg_dquote" | xsel --input --clipboard
}}
map global user P '!xsel --output --clipboard<ret>'
map global user p '<a-!>xsel --output --clipboard<ret>'

